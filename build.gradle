plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.node-gradle.node' version '7.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'

//    implementation 'com.moowork.node:com.moowork.node.gradle.plugin:1.3.1'

    runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('copyWebApp', Copy) {
    from 'src/main/webapp/my-app/build'
    into 'build/resources/main/static/.'
}

tasks.register('appNpmInstall', NpmTask) {
    description = "Installs all dependencies from package.json"
    println (project.projectDir)
    workingDir = file("${project.projectDir}/src/main/webapp/my-app")
    args = ["install"]
}

tasks.register('appNpmBuild', NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src/main/webapp/my-app")
    args = ["run", "build"]
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
resolveMainClassName.dependsOn copyWebApp

node {
    download = false

    // Set the work directory for unpacking node
    workDir = file("${layout.getBuildDirectory()}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${layout.getBuildDirectory()}/npm")
}
